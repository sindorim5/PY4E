문자열

+ 를 이용하여 쉽게 문자열 병합 가능

len: 문자열의 길이

s = 'Monty Python'
print(s[0:4])	# Mont s[0]에서 s[3]까지
print(s[:2])	# Mo s[0]에서 s[1]까지
print(s[8:])	# thon s[8]에서 끝까지
print(s[:])	# Monty Python 문자열 전체

논리연산자 in: 참, 거짓 판별 가능하고 어떤 문자열이 다른 문자열에 포함되는지 확인 가능

str.lower(), str.upper()
str.find(): 첫 번째로 나타다는 위치 검색
str.replace('ornn','shen'): ornn을 shen으로 바꿈
str.lstrip(), str.rstrip(), str.strip(): 좌, 우, 좌우 공백 제거
str.startswith(): str이 특정 문자, 문자열로 시작되는지 확인

문자열 파싱

Exercise 6.1: Write a while loop that starts at the last character in the
string and works its way backwards to the first character in the string,
printing each letter on a separate line, except backwards.

Exercise 6.2: Given that fruit is a string, what does fruit[:] mean?

answer) fruit itself

Exercise 6.3: Encapsulate this code in a function named count, and generalize it
so that it accepts the string and the letter as arguments.

Exercise 6.4: There is a string method called count that is similar to
the function in the previous exercise. Read the documentation of this
method at:
https://docs.python.org/library/stdtypes.html#string-methods
Write an invocation that counts the number of times the letter a occurs
in “banana”.

Exercise 6.5: Take the following Python code that stores a string:
str = 'X-DSPAM-Confidence:0.8475'
Use find and string slicing to extract the portion of the string after the
colon character and then use the float function to convert the extracted
string into a floating point number.

Exercise 6.6: Read the documentation of the string methods at
https://docs.python.org/library/stdtypes.html#string-methods You
might want to experiment with some of them to make sure you
understand how they work. strip and replace are particularly useful.
The documentation uses a syntax that might be confusing. For example,
in find(sub[, start[, end]]), the brackets indicate optional arguments.
So sub is required, but start is optional, and if you include start, then
end is optional.
